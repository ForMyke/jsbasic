{"version":3,"file":"bundle.js","sources":["../src/fetchGeneros.js","../src/obtenerGenero.js","../src/fetchPopulares.js","../src/cargarTitulos.js","../src/cargarGenero.js","../src/fecthBusqueda.js","../src/listernerBuscar.js","../src/listenerGeneros.js","../src/botonesFiltros.js","../src/index.js"],"sourcesContent":["//Funcion para poder hacer la peticion de las peliculas\r\nconst fethcGeneros = async (filtro = \"movie\") => {\r\n  //Obtenemos que genero es el que queremos\r\n  const tipo = filtro === \"movie\" ? \"movie\" : \"tv\";\r\n  const url = `https://api.themoviedb.org/3/genre/${tipo}/list?api_key=45b7d781208fa16760aa53df19b7c509&language=es-MX&page=1`;\r\n  try {\r\n    const respuesta = await fetch(url);\r\n    const datos = await respuesta.json();\r\n    return datos.genres;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default fethcGeneros;\r\n","const obtenerGenero = (id, generos) => {\r\n  let nombre;\r\n  generos.forEach((elemento) => {\r\n    //Nos aseguramos de que sean iguales\r\n    if (id === elemento.id) {\r\n      //Devolvemos el valor\r\n      nombre = elemento.name;\r\n    }\r\n  });\r\n  return nombre;\r\n};\r\nexport default obtenerGenero;\r\n","import fethcGeneros from \"./fetchGeneros\";\r\nimport obtenerGenero from \"./obtenerGenero\";\r\n\r\n//Funcion para poder hacer la peticion de las peliculas\r\nconst fethcPopulares = async (filtro = \"movie\") => {\r\n  const tipo = filtro === \"movie\" ? \"movie\" : \"tv\";\r\n\r\n  const url = `https://api.themoviedb.org/3/${filtro}/popular?api_key=45b7d781208fa16760aa53df19b7c509&language=es-MX&page=1`;\r\n  try {\r\n    const respuesta = await fetch(url);\r\n    const datos = await respuesta.json();\r\n    const generos = await fethcGeneros();\r\n    const resultados = datos.results;\r\n    resultados.forEach((resultado) => {\r\n      resultado.genero = obtenerGenero(resultado.genre_ids[0], generos);\r\n    });\r\n    return resultados;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default fethcPopulares;\r\n","const cargarTitulos = (pelicula) => {\r\n  //Contenedor\r\n  const contenedor = document.querySelector(\"#populares .main__grid\");\r\n  // Función para poder cargar los títulos\r\n  contenedor.innerHTML = \"\";\r\n  pelicula.forEach((resultado) => {\r\n    const plantilla = `<div class=\"main__media\">\r\n              <a href=\"#\" class=\"main__media-thumb\">\r\n                <img class=\"main__media-img\" src=\"https://image.tmdb.org/t/p/w500/${resultado.poster_path}\" alt=\"${resultado.title}\" />\r\n              </a>\r\n              <p class=\"main__media-titulo\">${resultado.title}</p>\r\n              <p class=\"main__media-fecha\">${resultado.genero}</p>\r\n            </div>`;\r\n    // Creación dinámica de los apartados\r\n    contenedor.insertAdjacentHTML(\"beforeend\", plantilla);\r\n  });\r\n};\r\nexport default cargarTitulos;\r\n","// Corrección de la importación y el nombre de la función\r\nimport fetchGeneros from \"./fetchGeneros\";\r\n\r\nconst contenedorGeneros = document.getElementById(\"filtro-generos\");\r\n\r\n// Función asíncrona para cargar géneros\r\nconst cargarGenero = async (filtro) => {\r\n  try {\r\n    const generos = await fetchGeneros(filtro);\r\n\r\n    // Opcional: limpiar el contenedor antes de agregar nuevos botones\r\n    contenedorGeneros.innerHTML = \"\";\r\n\r\n    generos.forEach((genero) => {\r\n      // Corrección en la creación del botón\r\n      const btn = document.createElement(\"button\"); // Cambiado de \"btn\" a \"button\"\r\n\r\n      // Añadir clases\r\n      btn.classList.add(\"btn\");\r\n\r\n      // Corrección a innerText\r\n      btn.innerText = genero.name; // Cambiado de innerTxt a innerText\r\n\r\n      btn.setAttribute(\"data-id\", genero.id);\r\n\r\n      // Agregar el botón al contenedor\r\n      contenedorGeneros.appendChild(btn);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error al cargar géneros:\", error);\r\n  }\r\n};\r\n\r\nexport default cargarGenero;\r\n","const fetchBusqueda = () => {\r\n  //Obtencion de los valores\r\n\r\n  //Tipo\r\n  const tipo = document.querySelector(\".main__filtros .btn--active\").id;\r\n  //idGenero\r\n  const idGenero = document.querySelector(\"#filtro-generos .btn--active\")\r\n    ?.dataset.id;\r\n  const añoInicial = document.getElementById(\"años-min\").value || 1950;\r\n  //Obtener el año con la API DE FECHAS\r\n  const añoFinal = document.getElementById(\"años-min\").value || 2024;\r\n\r\n  console.log(\"Buscando\");\r\n  console.log(tipo, idGenero, añoInicial, añoFinal);\r\n};\r\n\r\nexport default fetchBusqueda;\r\n","import fetchBusqueda from \"./fecthBusqueda\";\r\n\r\nconst btn = document.getElementById(\"btn-buscar\");\r\nbtn.addEventListener(\"click\", (evento) => {\r\n  fetchBusqueda();\r\n});\r\n","const contenedor = document.getElementById(\"filtro-generos\");\r\n\r\ncontenedor.addEventListener(\"click\", (evento) => {\r\n  evento.preventDefault();\r\n  //Nos aseguramos que solo sea a un boton\r\n  if (evento.target.closest(\"button\")) {\r\n    //Quitamos la clases cade vez aue la usemos\r\n    contenedor.querySelector(\".btn--active\")?.classList.remove(\"btn--active\");\r\n    evento.target.classList.add(\"btn--active\");\r\n  }\r\n});\r\n","import cargarGenero from \"./cargarGenero\";\r\nimport cargarTitulos from \"./cargarTitulos\";\r\nimport fethcPopulares from \"./fetchPopulares\";\r\n\r\nconst filtroPelicula = document.getElementById(\"movie\");\r\nconst filtroSerie = document.getElementById(\"tv\");\r\nfiltroPelicula.addEventListener(\"click\", async (evento) => {\r\n  evento.preventDefault();\r\n  cargarGenero(\"movie\");\r\n  const resultados = await fethcPopulares(\"movie\");\r\n  cargarTitulos(resultados);\r\n  filtroSerie.classList.remove(\"btn--active\");\r\n  filtroPelicula.classList.add(\"btn--active\");\r\n  document.querySelector(\"#populares .main__titulo\").innerText =\r\n    \"Peliculas Populares\";\r\n});\r\n\r\nfiltroSerie.addEventListener(\"click\", async (evento) => {\r\n  evento.preventDefault();\r\n  cargarGenero(\"tv\");\r\n  const resultados = await fethcPopulares(\"tv\");\r\n  cargarTitulos(resultados);\r\n  filtroPelicula.classList.remove(\"btn--active\");\r\n  filtroSerie.classList.add(\"btn--active\");\r\n  document.querySelector(\"#populares .main__titulo\").innerText =\r\n    \"Series Populares\";\r\n});\r\n","import fethcPopulares from \"./fetchPopulares\";\r\nimport cargarTitulos from \"./cargarTitulos\";\r\nimport cargarGenero from \"./cargarGenero\";\r\nimport \"./listernerBuscar\";\r\nimport \"./listenerGeneros\";\r\nimport \"./botonesFiltros\";\r\nconst pelis = async () => {\r\n  const pelicula = await fethcPopulares();\r\n  cargarTitulos(pelicula);\r\n  cargarGenero(\"movie\");\r\n};\r\npelis();\r\n"],"names":["fetchGeneros"],"mappings":"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"}